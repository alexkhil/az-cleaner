{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[deployment().location]",
      "metadata": {
        "description": "Location for the resources."
      }
    },
    "appName": {
      "type": "string",
      "defaultValue": "AzCleaner",
      "metadata": {
        "description": "Value uses as base-template to named the resources deployed in Azure."
      }
    },
    "enableApplicationInsights": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Indicates whether ApplicationInsights should be enabled and integrated."
      }
    }
  },
  "variables": {
    "suffix": "[toLower(concat(parameters('appName'), '-', parameters('location')))]",
    "resourceGroupName": "[toLower(concat('rg-', variables('suffix')))]",
    "roleAssignmentName": "[guid(subscription().subscriptionId, variables('resourceGroupName'))]",
    "deploymentName": "[concat('AzCleaner.Template-', uniqueString(deployment().name))]"
  },
  "resources": [
    {
      "name": "[variables('resourceGroupName')]",
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2020-06-01",
      "location": "[parameters('location')]"
    },
    {
      "name": "[variables('deploymentName')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-06-01",
      "resourceGroup": "[variables('resourceGroupName')]",
      "dependsOn": [
        "[resourceId('Microsoft.Resources/resourceGroups', variables('resourceGroupName'))]"
      ],
      "properties": {
        "mode": "Incremental",
        "expressionEvaluationOptions": {
          "scope": "Inner"
        },
        "parameters": {
          "appName": {
            "value": "[parameters('appName')]"
          },
          "enableApplicationInsights": {
            "value": "[parameters('enableApplicationInsights')]"
          },
          "location": {
            "value": "[parameters('location')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "appName": {
              "type": "string"
            },
            "enableApplicationInsights": {
              "type": "bool"
            },
            "location": {
              "type": "string"
            }
          },
          "variables": {
            "suffix": "[toLower(concat(parameters('appName'), '-', parameters('location')))]",
            "storageAccountName": "[toLower(concat('st', concat(parameters('appName'), parameters('location'))))]",
            "applicationInsightsName": "[toLower(concat('appi-', variables('suffix')))]",
            "functionAppName": "[toLower(concat('func-', variables('suffix')))]",
            "hostingPlanName": "[toLower(concat('plan-', variables('suffix')))]",
            "repoUrl": "https://github.com/alexkhil/AzCleaner.git"
          },
          "resources": [
            {
              "name": "[variables('functionAppName')]",
              "type": "Microsoft.Web/sites",
              "apiVersion": "2020-09-01",
              "location": "[parameters('location')]",
              "kind": "functionapp",
              "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
              ],
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "name": "[variables('functionAppName')]",
                "clientAffinityEnabled": false,
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
                "siteConfig": {
                  "appSettings": [
                    {
                      "name": "FUNCTIONS_WORKER_RUNTIME",
                      "value": "dotnet"
                    },
                    {
                      "name": "FUNCTIONS_EXTENSION_VERSION",
                      "value": "~4"
                    },
                    {
                      "name": "AZURE_FUNCTIONS_ENVIRONMENT",
                      "value": "Release"
                    },
                    {
                      "name": "WEBSITE_CONTENTSHARE",
                      "value": "[variables('functionAppName')]"
                    },
                    {
                      "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                      "value": "[if(parameters('enableApplicationInsights'), reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName'))).InstrumentationKey, null())]"
                    },
                    {
                      "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                      "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')),'2021-06-01').keys[0].value)]"
                    },
                    {
                      "name": "AzureWebJobsStorage",
                      "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2021-06-01').keys[0].value)]"
                    }
                  ]
                }
              },
              "resources": [
                {
                  "name": "web",
                  "type": "sourcecontrols",
                  "apiVersion": "2020-09-01",
                  "dependsOn": [
                    "[resourceId('Microsoft.Web/sites', variables('functionAppName'))]"
                  ],
                  "properties": {
                    "repoUrl": "[variables('repoURL')]",
                    "branch": "main",
                    "isManualIntegration": true
                  }
                }
              ]
            },
            {
              "name": "[variables('hostingPlanName')]",
              "type": "Microsoft.Web/serverfarms",
              "apiVersion": "2020-09-01",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Y1",
                "tier": "Dynamic",
                "size": "Y1",
                "family": "Y",
                "capacity": 0
              },
              "properties": {}
            },
            {
              "name": "[variables('storageAccountName')]",
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2021-06-01",
              "location": "[parameters('location')]",
              "kind": "StorageV2",
              "sku": {
                "name": "Standard_LRS"
              }
            },
            {
              "condition": "[parameters('enableApplicationInsights')]",
              "name": "[variables('applicationInsightsName')]",
              "type": "Microsoft.Insights/components",
              "apiVersion": "2020-02-02",
              "kind": "web",
              "location": "[parameters('location')]",
              "properties": {
                "Application_Type": "web"
              }
            }
          ],
          "outputs": {
            "functionAppPrincipalId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Web/sites', variables('functionAppName')), '2021-02-01', 'Full').identity.principalId]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2020-04-01-preview",
      "name": "[variables('roleAssignmentName')]",
      "properties": {
        "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleAssignments', concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'b24988ac-6180-42a0-ab88-20f7382dd24c'))]",
        "principalId": "[reference(variables('deploymentName')).outputs.functionAppPrincipalId.value]"
      }
    }
  ]
}
