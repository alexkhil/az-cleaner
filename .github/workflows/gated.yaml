name: Gated

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    paths-ignore:
      - "*.md"

jobs:
  func:
    name: Azure Function App
    runs-on: ubuntu-latest
    env:
      TESTS_OUTPUT: artifacts/tests

    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11

      - name: Set up .NET 6
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 6.0.x

      - name: Checkout
        uses: actions/checkout@v3

      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v1
        with:
          path: ./.sonar/scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: pwsh
        run: |
          New-Item -Path ./.sonar.scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path ./.sonar/scanner

      - name: .Net Restore
        run: dotnet restore

      - name: Begin Sonar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: pwsh
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"alexkhil_az-cleaner" /o:"alexkhil" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"

      - name: Build Release
        run: >
          dotnet build
          -c Release
          --no-restore
          --nologo

      - name: End Sonar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: pwsh
        run: |
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

      - name: .Net Test
        run: >
          dotnet test
          --collect "XPlat Code coverage"
          -r ${{ env.TESTS_OUTPUT }}/coverage
          -c Release
          --no-restore
          --no-build
          --nologo

      - name: Generate report
        uses: danielpalme/ReportGenerator-GitHub-Action@5.0.2
        with:
          reports: ${{ env.TESTS_OUTPUT }}/**/coverage.cobertura.xml
          targetdir: ${{ env.TESTS_OUTPUT }}/report
          reporttypes: Html

      - name: Publish tests artifacts
        uses: actions/upload-artifact@v2
        with:
          name: tests
          path: ${{ env.TESTS_OUTPUT }}

  infra:
    if: ${{ github.ref != 'refs/heads/main' }}
    name: Azure Infrastructure
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Bicep Build
        uses: Azure/bicep-build-action@v1.0.0
        with:
          bicepFilePath: infra/main.bicep
          outputFilePath: infra/azuredeploy.json

      - name: Set GIT_BRANCH_NAME
        id: git-branch-name
        uses: EthanSK/git-branch-name-action@v1

      - name: Update ARM
        uses: actions-js/push@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ env.GIT_BRANCH_NAME }}
          message: "Update ARM"
          force: true
